# Copyright IBM Corp, 2016
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
# implied. See the License for the specific language governing
# permissions and limitations under the License.

---
- name: Create slave directory
  file: >
    path=/var/powerci/slave
    state=directory

- name: debian_jessie - Create directory
  file: >
    path=/var/powerci/slave/debian_jessie
    state=directory

- name: debian_jessie - copy dockerfile
  copy: >
    src=Dockerfile.debian_jessie
    dest=/var/powerci/slave/debian_jessie/Dockerfile

- name: debian_jessie - copy authorized_keys
  copy: >
    src=authorized_keys
    dest=/var/powerci/slave/debian_jessie/authorized_keys
    owner={{ ansible_user }}
    mode=0644

- name: debian_jessie - build image
  docker_image: >
    name={{ debian.img_name }}
    path={{ debian.path }}
    state=present
    force=yes

- name: debian_jessie - start container
  docker_container:
    name: "{{ debian.cont_prefix }}{{ item }}"
    image: "{{ debian.img_name }}"
    state: started
    ports:
      - "{{ debian.ports[ item|int ] }}:22"
  with_sequence: start=0 count={{ debian.ports|length }}

- name: debian_jessie - counting containers
  shell: "docker ps -f name={{ debian.cont_prefix }}* | tail -n +2 | wc -l"
  register: up_debians

- name: debian_jessie - remove exceding containers
  docker_container:
    name: "{{ debian.cont_prefix }}{{ item }}"
    state: absent
  with_sequence: >
    start={{ debian.ports|length }}
    count={{ (up_debians.stdout|int)-(debian.ports|length) }}
  when: up_debians.stdout|int > debian.ports|length

### UBUNTU TRUSTY ###

- name: ubuntu_14_04 - create directory
  file: >
    path=/var/powerci/slave/ubuntu_14_04
    state=directory

- name: ubuntu_14_04 - copy dockerfile
  copy: >
    src=Dockerfile.ubuntu_14_04
    dest=/var/powerci/slave/ubuntu_14_04/Dockerfile

- name: ubuntu_14_04 - copy authorized_keys
  copy: >
    src=authorized_keys
    dest=/var/powerci/slave/ubuntu_14_04/authorized_keys
    owner={{ ansible_user }}
    mode=0644

- name: ubuntu_14_04 - build image
  docker_image: >
    name={{ ubuntu.trusty.img_name }}
    path={{ ubuntu.trusty.path }}
    state=present
    force=yes

- name: ubuntu_14_04 - start container
  docker_container:
    name: "{{ ubuntu.trusty.cont_prefix }}{{ item }}"
    image: "{{ ubuntu.trusty.img_name }}"
    state: started
    ports:
      - "{{ ubuntu.trusty.ports[ item|int ] }}:22"
  with_sequence: start=0 count={{ ubuntu.trusty.ports|length }}

- name: ubuntu_14_04 - counting containers
  shell: "docker ps -f name={{ ubuntu.trusty.cont_prefix }}* | tail -n +2 | wc -l"
  register: up_trusty

- name: ubuntu_14_04 - remove exceding containers
  docker_container:
    name: "{{ ubuntu.trusty.cont_prefix }}{{ item }}"
    state: absent
  with_sequence: >
    start={{ ubuntu.trusty.ports|length }}
    count={{ (up_trusty.stdout|int)-(ubuntu.trusty.ports|length) }}
  when: up_trusty.stdout|int > ubuntu.trusty.ports|length

### UBUNTU XENIAL ###

- name: ubuntu_16_04 - create directory
  file: >
    path=/var/powerci/slave/ubuntu_16_04
    state=directory

- name: ubuntu_16_04 - copy dockerfile
  copy: >
    src=Dockerfile.ubuntu_16_04
    dest=/var/powerci/slave/ubuntu_16_04/Dockerfile

- name: ubuntu_16_04 - copy authorized_keys
  copy: >
    src=authorized_keys
    dest=/var/powerci/slave/ubuntu_16_04/authorized_keys
    owner={{ ansible_user }}
    mode=0644

- name: ubuntu_16_04 - build image
  docker_image: >
    name={{ ubuntu.xenial.img_name }}
    path={{ ubuntu.xenial.path }}
    state=present
    force=yes

- name: ubuntu_16_04 - start container
  docker_container:
    name: "{{ ubuntu.xenial.cont_prefix }}{{ item }}"
    image: "{{ ubuntu.xenial.img_name }}"
    state: started
    ports:
      - "{{ ubuntu.xenial.ports[ item|int ] }}:22"
  with_sequence: start=0 count={{ ubuntu.xenial.ports|length }}

- name: ubuntu_16_04 - counting containers
  shell: "docker ps -f name={{ ubuntu.xenial.cont_prefix }}* | tail -n +2 | wc -l"
  register: up_xenial

- name: ubuntu_16_04 - remove exceding containers
  docker_container:
    name: "{{ ubuntu.xenial.cont_prefix }}{{ item }}"
    state: absent
  with_sequence: >
    start={{ ubuntu.xenial.ports|length }}
    count={{ (up_xenial.stdout|int)-(ubuntu.xenial.ports|length) }}
  when: up_xenial.stdout|int > ubuntu.xenial.ports|length

- name: Remove stopped containers
  shell: docker rm `docker ps -q -f status=exited`
  failed_when: False

- name: Remove dangling images
  shell: docker rmi `docker images -q -f dangling=true`
  failed_when: False
